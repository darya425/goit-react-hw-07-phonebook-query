{"version":3,"sources":["Redux/contactSlice.js","Redux/store.js","Components/Container/Container.js","Components/Layout/Layout.js","Components/Form/Form.js","Components/Filter/Filter.js","Components/Contact/Contact.js","Components/ContactsList/ContactsList.js","App.js","index.js"],"names":["contactApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","body","name","number","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","store","configureStore","reducer","middleware","getDefaultMiddleware","devTools","process","setupListeners","dispatch","Container","children","className","protoTypes","PropTypes","node","isRequired","Layout","protoType","Form","useState","setName","setNumber","isLoading","contacts","data","nameImputId","shortId","generate","numberImputId","handleInputName","e","target","value","reset","autoComplete","onSubmit","preventDefault","newContact","toLowerCase","find","contact","alert","console","log","toast","success","autoClose","htmlFor","id","type","placeholder","pattern","title","onChange","required","disabled","color","height","width","Filter","filter","currentTarget","Contact","isDeleting","onClick","ContactsList","setContacts","isFetching","useEffect","normalizeFilter","filterValue","includes","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7fbcc0a.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactApi = createApi({\r\n  reducerPath: 'contactApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://611e10377d273a0017e2fa20.mockapi.io',\r\n  }),\r\n  tagTypes: ['Contact'],\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => `/contacts`,\r\n      providesTags: ['Contact'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: contactId => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n    createContact: builder.mutation({\r\n      query: ({ name, number }) => ({\r\n        url: '/contacts',\r\n        method: 'POST',\r\n        body: {\r\n          name: name,\r\n          number: number,\r\n        },\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useCreateContactMutation,\r\n} = contactApi;\r\n","import { configureStore } from '@reduxjs/toolkit';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport { contactApi } from './contactSlice';\n\nexport const store = configureStore({\n  reducer: {\n    [contactApi.reducerPath]: contactApi.reducer,\n  },\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware(),\n    contactApi.middleware,\n  ],\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nsetupListeners(store.dispatch);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ children }) => <div className=\"container\">{children}</div>;\n\nContainer.protoTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Container from '../Container';\n\nconst Layout = ({ children }) => (\n  <>\n    <Container>{children}</Container>\n  </>\n);\n\nLayout.protoType = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import { useState } from 'react';\nimport {\n  useFetchContactsQuery,\n  useCreateContactMutation,\n} from '../../Redux/contactSlice';\nimport shortId from 'shortid';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport './Form.scss';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const [createContact, { isLoading }] = useCreateContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  const nameImputId = shortId.generate();\n  const numberImputId = shortId.generate();\n\n  const handleInputName = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = name.toLowerCase();\n    const savedContacts = contacts.find(\n      contact => contact.name.toLowerCase() === newContact,\n    );\n\n    if (savedContacts) {\n      alert(name + ' is already in contacts.');\n      reset();\n      return;\n    }\n\n    console.log(name);\n    console.log(number);\n    createContact({ name, number });\n    toast.success('Contact added!', { autoClose: 2000 });\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <ToastContainer />\n      <form autoComplete=\"off\" className=\"form\" onSubmit={handleSubmit}>\n        <label htmlFor={nameImputId} className=\"name\">\n          Name :\n        </label>\n        <input\n          id={nameImputId}\n          className=\"name_input\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Enter a made up name...\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"You need to click on the letters\"\n          onChange={handleInputName}\n          required\n        />\n        <label htmlFor={numberImputId} className=\"name\">\n          Phone number :\n        </label>\n        <input\n          id={numberImputId}\n          className=\"name_input\"\n          type=\"tel\"\n          autoComplete=\"off\"\n          name=\"number\"\n          value={number}\n          placeholder=\"Enter number 666-666-6666...\"\n          pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n          title=\"Do you know what a dash is?\"\n          onChange={handleInputName}\n          required\n        />\n\n        <button className=\"btn-form\" type=\"submit\" disabled={isLoading}>\n          {isLoading ? (\n            <Loader type=\"Circles\" color=\"#00BFFF\" height={15} width={15} />\n          ) : (\n            'Add contact'\n          )}\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n","import React from 'react';\n\nimport './Filter.scss';\n\nconst Filter = ({ filter }) => {\n  const handleSubmit = e => {\n    filter(e.currentTarget.value);\n  };\n\n  return (\n    <div className=\"filter-form\">\n      <label className=\"filter-title\">Find contact by name :</label>\n      <input\n        className=\"filter-input\"\n        type=\"text\"\n        placeholder=\"Find a lost soul...\"\n        onChange={handleSubmit}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from '../../Redux/contactSlice';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport './Contact.scss';\n\nconst Contact = ({ id, name, number }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <li className=\"item\">\n      <span className=\"name-item\">{name}</span>\n      <span className=\"name-item\">{number}</span>\n      <button\n        className=\"btn\"\n        type=\"button\"\n        onClick={() => {\n          deleteContact(id);\n          toast.success('Contact deleted!', { autoClose: 2000 });\n        }}\n        disabled={isDeleting}\n      >\n        {isDeleting && (\n          <Loader type=\"Circles\" color=\"#00BFFF\" height={15} width={15} />\n        )}\n      </button>\n    </li>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","import { useFetchContactsQuery } from '../../Redux/contactSlice';\nimport { useState, useEffect } from 'react';\nimport Filter from '../Filter';\nimport Contact from '../Contact';\n\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport './ContactsList.scss';\n\nconst ContactsList = () => {\n  const [contacts, setContacts] = useState([]);\n  const { data, isFetching } = useFetchContactsQuery();\n\n  useEffect(() => {\n    if (data) {\n      setContacts(data);\n    }\n  }, [data]);\n\n  const onFilterContacts = filter => {\n    if (filter) {\n      const normalizeFilter = filter.toLowerCase();\n      const filterValue = contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizeFilter),\n      );\n\n      setContacts(filterValue);\n    } else {\n      setContacts(data);\n    }\n  };\n\n  return (\n    <>\n      <Filter filter={onFilterContacts} />\n      {isFetching && (\n        <Loader type=\"Circles\" color=\"#00BFFF\" height={30} width={30} />\n      )}\n      {contacts && (\n        <ul className=\"list\">\n          {contacts.map(contact => (\n            <Contact key={contact.id} {...contact} />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default ContactsList;\n","import Layout from './Components/Layout';\nimport Form from './Components/Form';\nimport ContactsList from './Components/ContactsList';\n\nimport './App.scss';\n\nconst App = () => {\n  return (\n    <Layout>\n      <div className=\"box\">\n        <h1 className=\"title\">Phonebook of non-existent people</h1>\n        <Form />\n      </div>\n\n      <div className=\"box\">\n        <h2 className=\"contact\">Contacts</h2>\n        <ContactsList />\n      </div>\n    </Layout>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport {store} from './Redux/store';\nimport App from './App';\n\nimport './index.scss';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}